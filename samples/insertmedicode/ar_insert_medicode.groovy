/* ar_insert_medicode.groovy

Reads a csv file (sample below) and inserts a new SPRMEDI.SPRMEDI_MEDI_CODE
record for each student in the file, if there isn't one already present 
for that student.

"PatientNumber","PatientName","Compliance"
"023","Social, Joe","M2"
"950824521","McLaughlin, Martin","M2"
"955902154","Henson,Allison M","M2"

INB: GOAMEDI - SPRMEDI.SPRMEDI_MEDI_CODE

Output Report:

06/28/2016 8:34 AM           University of Vermont                        Page 1
                           Medical Code Insert Report

ID        Name                    Code Status Message    
023       Social, Joe             M2   !!! Invalid Student ID.    
950824521 McLaughlin, Martin      M2   OK.  Record Inserted.    
955902154 Henson,Allison M        M2   !!! Medical Code is already present.    
956829195 Moriarty,Corey Joseph   M2   !!! Medical Code is already present.    

sampledata/Test Data.csv                                Generated by MLM at AIST

Auth: mlm - 06/28/2016

*/
import edu.uvm.banner.ScriptTool;
@groovy.transform.BaseScript ScriptTool scriptTool
import groovy.sql.Sql

// Prompt for the file name
String fnm = input('Enter the file name',ck.required, ck.fileExists)

//Setup Report definition 
rpt.addHead( new Date().format('MM/dd/yyyy h:mm a') , "University of Vermont",{"Page " + delegate.pgno})
   .addHead("", "Medical Code Insert Report","")
   .addFoot("${fnm}", "", "Generated by ${username} at ${dbname}") 
   .addColHead( 10, 'L',"%-10s",    ["ID"])
   .addColHead( 24, 'L',"%-24s",    ["Name"])
   .addColHead(  5, 'L',"%-5s",     ["Code"])
   .addColHead( 41, 'L',"%-8s",     ["Status Message"])
rpt.lpp=51;rpt.cpl=rpt.colHeaders.sum {it.width}

println "Processing ${fnm} ..."
// Process each row in the file and print report line
csv.fetchAll(fnm, {r -> 
	String msg = insert_row(r)
	rpt.pl r.PatientNumber, r.PatientName, r.Compliance, msg
 })
println "Done"
// ******************************************************
String insert_row(r){
	// Insert the medicode for the student, unless it is already there
	dbgShow "Row data = ${r}"
	String msg = ''

	Number pidm = tr.studentid2pidm(r.PatientNumber)

	if (pidm == 0){
		msg = '!!! Invalid Student ID.'
	} else if ('Y' == does_row_exist( pidm, r.Compliance )) {
		msg = '!!! Medical Code is already present.'
	} else { // Insert new record here using gb_medical api.

		String up = "BEGIN gb_medical.p_create(p_pidm => ?, p_medi_code => ?, p_disb_ind => 'N', p_rowid_out => ?);END;"
		try{
			sql.call(up, [ pidm, r.Compliance, Sql.VARCHAR]) 
				{ msg = 'OK.  Record Inserted.'
				  dbgShow "   Inserted record ${it}"
				}
			
		}catch( Exception e ){
			msg =  "!!! Insert failed: " + e.message.replaceAll("\n", ';') 
			dbgShow "   !!! Insert failed: " + e.message.replaceAll("\n", ';')
		}
	}
	return msg
}

String does_row_exist( Number pidm, String medi_code ){
	// check if row is already present in the table.
	// returns Y or N
	String exists 
	String sp = 'BEGIN ? := gb_medical.f_exists( p_pidm => ?, p_medi_code => ?);END;'
	sql.call( sp, [ Sql.VARCHAR, pidm, medi_code] ) { exists = it }
	dbgShow "   pidm = ${pidm} : exists = ${exists}"
	return exists
}