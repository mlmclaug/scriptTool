import edu.uvm.banner.ScriptTool;
@groovy.transform.BaseScript ScriptTool scriptTool

    //>>>> Get parms 
    println 'List All Active Holds For Students Having Active Specified Hold'
    def parms = new parms()
    parms.hold_code = input("HoldCD",'FH',tr_input(tr.ucase), ck.isInQry.call(queries.sqlValidHolds, 'STVHLDD_CODE'))
    parms.allHolds = input("All Holds",'N',tr_input(tr.ucase), ck.isInList.rcurry(['Y','N']))
    parms.aidy_code = input("Aid Year",'1617', ck.isAIDY)
    parms.termCode = input("Enter Term Code Used to Calculate Class",'201609', ck.isTermCD)
    parms.level= input('Enter level ("UG","GR","MD"...) or <return> for all levels',
                    tr_input(tr.ucase), ck.isInQry(queries.sqlValidLevels))

    println "Code College"
    println "---- -------"
    sql.eachRow(queries.sqlCollegeNamesList) {println "${it.code}    ${it.name}" }

    String c = input('Enter college code, or <return> to include all colleges',
                ck.isInQry(queries.sqlCollegeNamesList, 'code'))
    parms.college_code = 0<c.size() ? c : '%'
    parms.college_name = 0<c.size() ? sql.firstRow(queries.sqlGetCollegeName, [parms]).swxcoll_full_name
                                    : 'All Colleges'

    String title = 'List ' 
        title += (parms.allHolds == 'Y') ? 'Active Holds for ' : ''
        title += (parms.level.size() == 0) ? 'All' : parms.level
        title += ' Students in ' + parms.college_name 
        title +=' with an ' + parms.hold_code + ' Hold'
    println "Processing: ${title}"

    //>>>> Setup Report definition 
    rpt.addHead( new Date().format('MM/dd/yyyy h:mm a') , "University of Vermont",{"Page " + delegate.pgno})
    .addHead("", title ,"")
    .addFoot("", "Generated by ${username} at ${dbname}", "") 
    .addColHead( 10, 'L',"%-10s",    ["ID","========="])
    .addColHead( 25, 'L',"%-25s",    ["Name","========================="])
    .addColHead(  6, 'R',"%6s",     ["Level","====="])
    .addColHead(  6, 'R',"%6s",     ["Class","====="])
    .addColHead(  7, 'R',"%7s",     ["Status","======"])
    .addColHead(  7, 'R',"%6s ",     ["FAFSA", "===== "])
    .addColHead( 31, 'L'," %-30s",    [" College"," =============================="])
    .addColHead( 14, 'R',"%,13.2f ", ["Balance ","======= "])
    .addColHead(  5, 'C',"%-5s",     ["Hold","===="])
    .addColHead( 14, 'R',"%,13.2f ", ["","Hold ","Amount ","====== "])
    .addColHead( 14, 'L',"  %-12s",    ["  From Date", "  ==========="])
    rpt.lpp=58;rpt.cpl=rpt.colHeaders.sum {it.width}


    //>>>> Main Program Loop
    int acct_cnt = 0, hold_cnt = 0, prev_pidm = 0 
    sql.eachRow(queries.sqlMain, [parms]){ row ->
        parms.pidm = row.spriden_pidm
        def holds = sql.rows(queries.sqlHolds, [parms])
        def lvl = sql.firstRow(queries.sqlLevel, [parms])
        def fafsa = sql.firstRow(queries.sqlFafsa, [parms])
        def cls = sql.firstRow(queries.sqlClass, [parms])

        def stuname = row.spriden_last_name + ", " + row.spriden_first_name + " " + (row.spriden_mi !=  null ? row.spriden_mi : "") 
        stuname = stuname.substring(0,[25,stuname.size()].min())
        acct_cnt ++
        hold_cnt += holds.size()
        //Output the Row
        holds.each {h ->  
            boolean bRow1 = prev_pidm != row.spriden_pidm
            prev_pidm = row.spriden_pidm

            if (bRow1){
                rpt.pl( row.spriden_id,
                        stuname,
                        lvl?.sgbstdn_levl_code,
                        cls?.swxclas_code,
                        lvl?.sgbstdn_stst_code,
                        fafsa?.robusdf_value_29,
                        row.college,
                        row.balance,
                        h.sprhold_hldd_code,
                        h.sprhold_amount_owed,
                        h.fromdate
                      )
            } else {
                rpt.pl(  " "," "," "," "," "," ",
                        " "," ",
                        h.sprhold_hldd_code,
                        h.sprhold_amount_owed,
                        h.fromdate,
                      )
            }
        }   
    }   
    // Print summary Stats
    rpt.pl( "Accounts: ${acct_cnt}" )
    rpt.pl( "Holds:    ${hold_cnt}" )
//-----------------------------------------------//
class parms {
    def hold_code 
    def allHolds
    def aidy_code
    def termCode
    def level
    def college_code
    def college_name
    def pidm
}

class queries{
    //Define Queries to be run
/*
    static String sqlMain = """ 
        select spriden_pidm, spriden_id, spriden_last_name, spriden_first_name, spriden_mi, sum(tbraccd_balance) balance
         from spriden, tbraccd, sprhold
        where sprhold_pidm = spriden_pidm
          and sprhold_hldd_code = :hold_code
          and sprhold_to_date >= sysdate
          and tbraccd_pidm = sprhold_pidm
          and spriden_change_ind is null
          and spriden_entity_ind = 'P'
          --and spriden_pidm in (247944, 1904161, 389799, 390033)
        group by spriden_pidm, spriden_id, spriden_last_name, spriden_first_name,
          spriden_mi, sprhold_from_date
        order by lower(spriden_last_name), spriden_first_name
    """
*/
    static String sqlMain = """ 
        select * from (
            select spriden_pidm, spriden_id
            ,spriden_last_name, spriden_first_name, spriden_mi
            ,sum(tbraccd_balance) balance
            ,substr(swxcoll_full_name,1,30) college
            from spriden, tbraccd, sprhold, sgbstdn a,swxcoll
            where sprhold_pidm = spriden_pidm
              and sprhold_hldd_code = :hold_code
              and sprhold_to_date >= sysdate
              and tbraccd_pidm = sprhold_pidm
              and spriden_change_ind is null
              and spriden_entity_ind = 'P'
              and a.sgbstdn_pidm  = spriden_pidm 
              and a.sgbstdn_coll_code_1 like :college_code
              and a.sgbstdn_term_code_eff = 
                 (select max(b.sgbstdn_term_code_eff)
                  from sgbstdn b
                  where a.sgbstdn_pidm = b.sgbstdn_pidm)
              and swxcoll_code=a.sgbstdn_coll_code_1 
            group by spriden_pidm, spriden_id, spriden_last_name, spriden_first_name,
              spriden_mi, sprhold_from_date,substr(swxcoll_full_name,1,30)

        union
        -- if doing all colleges this picks up the few that have no record in sgbstdn
            select 
            spriden_pidm
            ,spriden_id
            ,spriden_last_name
            ,spriden_first_name
            ,spriden_mi
            ,sum(tbraccd_balance)
            , ''
            from spriden, tbraccd, sprhold  
            where sprhold_hldd_code = :hold_code
              and sprhold_to_date >= sysdate
              and tbraccd_pidm = sprhold_pidm
              and spriden_pidm=sprhold_pidm
              and spriden_change_ind is null
              and spriden_entity_ind = 'P'
              and (not exists(select 'x' from sgbstdn where
                 sgbstdn_pidm=sprhold_pidm))
                and 'All Colleges' = :college_name
            group by spriden_pidm, spriden_id, spriden_last_name, spriden_first_name,
              spriden_mi, sprhold_from_date
        ) 
        order by lower(spriden_last_name), spriden_first_name
    """
    static String sqlHolds = """ 
        select sprhold_hldd_code, sprhold_amount_owed, to_char(sprhold_from_date,'DD-MON-YYYY') fromdate
        from sprhold where sprhold_pidm = :pidm and sprhold_to_date >= sysdate
        and (:allHolds = 'Y' or sprhold_hldd_code = :hold_code)
        order by sprhold_hldd_code
    """
    static String sqlLevel = """ 
    select sgbstdn_levl_code, sgbstdn_stst_code
    from sgbstdn where sgbstdn_pidm = :pidm
      and sgbstdn_term_code_eff = (select max(sgbstdn_term_code_eff) 
                                from sgbstdn where sgbstdn_pidm = :pidm)
    """
    static String sqlFafsa = """
        select robusdf_value_29 from robusdf 
        where robusdf_pidm = :pidm and robusdf_aidy_code = :aidy_code
    """
    static String sqlClass = """
        select swxclas_code from  swxclas
        where swxclas_code = swf_clas_calc(:pidm, :termCode)
    """
    static String sqlGetCollegeName = """
        select swxcoll_full_name from swxcoll
        where swxcoll_code = :college_code
    """
    static String sqlCollegeNamesList = """
        select swxcoll_code code, swxcoll_full_name name from swxcoll
        where swxcoll_email_address is not null and swxcoll_code <> '00'
        order by swxcoll_full_name
    """  
    static String sqlValidLevels = """
        select STVLEVL_CODE from STVLEVL 
        where STVLEVL_CODE != '00' order by STVLEVL_CODE
    """  
    static String sqlValidHolds = """
        select STVHLDD_CODE from STVHLDD order by STVHLDD_CODE
    """  
}                                                                            
